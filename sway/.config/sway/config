### Global variables ###

# Set font for window titles.
font pango:Terminus 9
# Set window key.
set $mod Mod4
# Set navigation keys
set $left h
set $down j
set $up k
set $right l
# Set termite as main terminal.
set $term termite
# Set rofi as dmenu replacement.
set $menu rofi
# Set chromium as main browser.
set $browser chromium

### Settings ###

# Set default border style for new windows
new_window pixel 1
new_float pixel 1
# Drag floating windows with $mod+mouse.
floating_modifier $mod
# Hide window borders adjacent to the screen edges.
hide_edge_borders both
# Switch back to the prior workspace when repeating a workspace.
workspace_auto_back_and_forth yes
# The window takes the focus when an event occurs.
focus_on_window_activation focus

### Output configuration ###

# You can get the names of your outputs by running: swaymsg -t get_outputs

# Set the default wallpaper for every screen.
output * bg `/home/someone/bin/wallpaper.py` fill
output DP-1 pos 0,0 res 2560x1440
output eDP-1 pos 2560,0 res 2560x1440

### Input configuration ###

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Set the touchpad configuration.
input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    accel_profile flat
    pointer_accel 0.8
}
input "5426:41:Razer_Razer_DeathAd" {
    accel_profile flat
    pointer_accel 0.1
}

### Key bindings ###

# Start a terminal.
bindsym $mod+Return exec $term
# Start a terminal with ranger.
bindsym $mod+Shift+r exec $term -e "ranger"
# Start rofi.
bindsym $mod+d exec $menu -show "drun"
bindsym $mod+Shift+d exec $menu -show "window"
# Kill focused window with $mod+shift+q.
bindsym $mod+Shift+q kill
# Reload the configuration file.
bindsym $mod+Shift+c reload
# _move_ the focused window with the same, but add Shift.
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# Move your focus around with $mod+hjkl or $mod+arrow.
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
bindsym $mod+g focus next
bindsym $mod+Shift+g focus prev
# Few more
bindsym $mod+Mod1+h workspace prev_on_output
bindsym $mod+Mod1+l workspace next_on_output
bindsym $mod+Mod1+Left workspace prev_on_output
bindsym $mod+Mod1+Right workspace next_on_output

### Workspaces ###

# Global variables for workspaces.
# To use these icons don't forget to install ttf-font-awesome.
# Feel free to use some others: http://fontawesome.io/cheatsheet/
set $ws1 "1: "
set $ws2 "2: "
set $ws3 "3: "
set $ws4 "4: "
set $ws5 "5: "
set $ws6 "6: "
set $ws7 "7: "

# Define workspaces on monitors.
workspace $ws1 output eDP1
workspace $ws2 output DP1
workspace $ws3 output DP1
workspace $ws4 output DP1
workspace $ws5 output DP1
workspace $ws6 output DP1
workspace $ws8 output eDP1

# Switch to workspaces.
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7

### Layout stuff. ###

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles.
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen.
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode.
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area.
bindsym $mod+space focus mode_toggle

# Move focus to the parent container.
bindsym $mod+a focus parent

# Cycle through border styles with mod+b.
# bindsym $mod+b border toggle

### Scratchpad

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+t move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+t scratchpad show

### Others ###

# Passwords.
bindsym $mod+p exec ~/bin/pass-rofi

# Brightness.
# Uses the Backlight Utility that's right for you, mine may not work
# with your system.
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Media player.
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Volume/Microphone Keys.
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%
bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
bindsym XF86AudioMicMute exec pulseaudio-ctl mute-input

# Power mode.
set $locker swaylock -c 00000000

### Different menu ###

# Power.
set $mode_power "System lock (l), logout (e), suspend (s), reboot (r), shutdown (Shift+s)"
mode $mode_power {
    # Lock the screen.
    bindsym l exec $locker, mode "default"
    # Logout the current session.
    bindsym e exec swaymsg exit, mode "default"
    # Suspend the current session.
    bindsym s exec $locker && systemctl suspend, mode "default"
    # Reboot the computer.
    bindsym r exec systemctl reboot, mode "default"
    # Shutdown the computer.
    bindsym Shift+s exec systemctl poweroff -i, mode "default"

    # Return to default mode.
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Set power mode.
bindsym $mod+Shift+p mode $mode_power

# Resizing container.
set $mode_resize "(h) left, (j) up, (k) down, (l) right"
mode $mode_resize {
    bindsym $left resize grow width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize shrink width 10 px or 10 ppt

    # Ditto, with arrow keys.
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # Return to default mode.
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize move.
bindsym $mod+r mode $mode_resize

# Screenshot mode.
set $mode_screenshot "Screen (a) full screen, (f) focused"
mode $mode_screenshot {
    bindsym a exec swaygrab -f ~/Pictures/Screenshots/$(date +"%Y-%m-%d_%H:%M:%S.png"), mode "default"
    bindsym f exec scrot -u ~/Pictures/Screenshots/$(date +"%Y-%m-%d_%H:%M:%S.png"), mode "default"

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Set screenshot mode
bindsym $mod+Shift+s mode $mode_screenshot

### Bar
#
# colors
# color class           border  background text    indicator
client.focused          #eee8d5 #93a1a1    #073642 #93a1a1
client.focused_inactive #657b83 #586e75    #eee8d5 #657b83
client.unfocused        #073642 #002b36    #839496 #073642
client.urgent           #cb4b16 #dc322f    #eee8d5 #dc322f

### Status Bar

# Color scheme
set $black  #000000
set $cyan   #6bbed2
set $grey   #747474
set $orange #f1af5f
set $red    #ff5137
set $white  #dddcff

bar {
    position top
    colors {
        background $black
	# workspace class  border  background  text
        inactive_workspace $black  $black      $white
        active_workspace   $black  $black      $orange
        focused_workspace  $black  $black      $orange
    }
    separator_symbol " "
    #strip_workspace_numbers yes
    font pango:Terminus 13
    position top
    #status_command polybar top
}

### i3-gaps ###

for_window [class="^.*"]                border pixel 0
gaps inner 30
gaps outer 10
smart_gaps on

### Startup programs. ###

exec --no-startup-id xbindkeys
exec --no-startup-id dropbox-cli start
exec --no-startup-id nm-applet
exec --no-startup-id redshift-gtk -l `where-ami`
exec --no-startup-id caffeine
exec --no-startup-id razercfg -r 2
exec --no-startup-id emacs --daemon

include /etc/sway/config.d/*
include ~/.config/sway/config.d/*

exec xrdb -merge ~/.Xresources

#exec ~/bin/scripts/wallpaper.py -t 300